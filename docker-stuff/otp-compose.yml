version: '3.8'
services:
  download-bundle:
    image: amazon/aws-cli
    command: "s3 cp ${S3_URI} /var/opentripplanner/ --recursive" 
    volumes:
      - type: bind
        source: ./otp
        target: /var/opentripplanner
#      - type: bind
#        source: ~/.aws
#        target: /root/.aws
  mark-status-json-as-complete:
    image: alpine
    command: /bin/sh -c "apk add jq && touch /etc/caddy/static/status-new.json && jq '.serverStarted = \"true\"' /etc/caddy/static/status.json > /etc/caddy/static/status-new.json && rm /etc/caddy/static/status.json && mv /etc/caddy/static/status-new.json /etc/caddy/static/status.json"
    depends_on:
      otp:
        condition: service_healthy
    volumes:
      - type: bind
        source: ./caddy
        target: /etc/caddy/
  add-status-json-nonce:
    image: alpine
    command: /bin/sh -c "cat /var/opentripplanner/otp-runner-server-only-manifest.json | jq '.nonce' > /var/opentripplanner/nonce.txt && apk add jq && touch /etc/caddy/static/status-new.json && jq '.nonce = $(cat /var/opentripplanner/nonce.txt)' /etc/caddy/static/status.json > /etc/caddy/static/status-new.json && rm /etc/caddy/static/status.json && mv /etc/caddy/static/status-new.json /etc/caddy/static/status.json"
    depends_on:
      download-bundle:
        condition: service_completed_successfully
    volumes:
      - type: bind
        source: ./otp
        target: /var/opentripplanner
      - type: bind
        source: ./caddy
        target: /etc/caddy/
  otp:
    depends_on:
      add-status-json-nonce:
        condition: service_completed_successfully
    image: opentripplanner/opentripplanner:latest
    ports: 
      - "8080:8080"
    command: "--load --serve"
    healthcheck:
      test: [ "CMD", "curl", "localhost:8080/otp" ]
      interval: 10s
      timeout: 3s
      retries: 300
    restart: on-failure
    volumes:
      - type: bind
        source: ./otp
        target: /var/opentripplanner
  caddy:
    image: caddy:latest
    restart: unless-stopped
    volumes:
      - type: bind
        source: ./caddy
        target: /etc/caddy/
    ports:
      - "80:80"
      - "443:443"